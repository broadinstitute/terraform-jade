{{ $project := "jade" }}
{{ with $environment := env "ENVIRONMENT" }}
{{with $suffix := env "SUFFIX"}}
{{$keyname := printf "secret/devops/terraform/%s/%s/override-%s" $environment $project $suffix}}
{{ with secret $keyname }}

{{ if eq $environment "dev" }}
{{ if eq $environment $suffix }}

variable "initials" {
  type = list(string)
  default = [
  "ms",
  "mk",
  "rc",
  "mm",
  "fb",
  "my",
  "jh",
  "dd",
  "sh",
  "nm",
  "ps",
  "se",
  "tn",
  "tl",
  "tc",
  "cl",
  "az",
  "ok",
  "eo"
  ]
}

locals {
  initialrecords = merge(
    {
      for initial in var.initials:
        "jade-global-${initial}" => { type = "A", rrdatas = "${google_compute_global_address.jade-initials-ip[initial].address}" }
    },
    {
      for initial in var.initials:
        "jade-${initial}" => { type = "CNAME", rrdatas = "jade-global-${initial}.datarepo-{{$environment}}.broadinstitute.org." }
    },
  )
}

module "initials-dns-set" {
  # terraform-shared repo
  source                = "github.com/broadinstitute/terraform-shared.git//terraform-modules/external-dns?ref=external-dns-0.0.2-tf-0.12"
  target_project        = var.env_project
  region                = var.region
  target_credentials    = file("env_svc.json")
  target_dns_zone_name  = "datarepo-${var.env}"
  records               = local.initialrecords
}

resource "google_compute_global_address" "jade-initials-ip" {
  for_each    = toset(var.initials)
  provider    = google
  name        = "jade-{{$environment}}-${each.key}"
  depends_on  = [module.enable-services]
}

resource "google_sql_database" "jade-datarepo-initials-db" {
    for_each    = toset(var.initials)
    name        = "datarepo-${each.key}"
    project     = data.google_project.project.name
    instance    = google_sql_database_instance.jade_100_postgres[0].name
    charset     = "UTF8"
    collation   = "en_US.UTF8"
    depends_on  = [google_sql_database_instance.jade_100_postgres]
}

resource "google_sql_database" "jade-stairway-initials-db" {
    for_each    = toset(var.initials)
    name        = "stairway-${each.key}"
    project     = data.google_project.project.name
    instance    = google_sql_database_instance.jade_100_postgres[0].name
    charset     = "UTF8"
    collation   = "en_US.UTF8"
    depends_on  = [google_sql_database_instance.jade_100_postgres]
}

####
resource "google_sql_database" "jade-datarepo-initials-db-11" {
    for_each    = toset(var.initials)
    name        = "datarepo-${each.key}"
    project     = data.google_project.project.name
    instance    = google_sql_database_instance.jade_11_postgres_db[0].name
    charset     = "UTF8"
    collation   = "en_US.UTF8"
    depends_on  = [google_sql_database_instance.jade_11_postgres_db]
}

resource "google_sql_database" "jade-stairway-initials-db-11" {
    for_each    = toset(var.initials)
    name        = "stairway-${each.key}"
    project     = data.google_project.project.name
    instance    = google_sql_database_instance.jade_11_postgres_db[0].name
    charset     = "UTF8"
    collation   = "en_US.UTF8"
    depends_on  = [google_sql_database_instance.jade_11_postgres_db]
}

# workload identity GSA to KSA binding, this is a 1:1 so 1 GSA to KSA

resource "google_service_account" "user-sql-service-account" {
  for_each     = toset(var.initials)
  account_id   = "${each.key}-proxy-sa"
  display_name = "sqlproxy service account for ${each.key} namespace"
}

resource "google_service_account_key" "user-sql-sa-key" {
  for_each           = toset(var.initials)
  service_account_id = google_service_account.user-sql-service-account[each.key].name
  depends_on         = [google_service_account.user-sql-service-account]
}

resource "google_project_iam_member" "user-sql-sa-role" {
  for_each   = toset(var.initials)
  project    = data.google_project.project.name
  role       = "roles/cloudsql.client"
  member     = "serviceAccount:${google_service_account.user-sql-service-account[each.key].email}"
  depends_on = [google_service_account.user-sql-service-account]
}

resource google_service_account_iam_binding sqlproxy_workload_identity_binding {
  for_each            = toset(var.initials)
  provider            = google
  service_account_id  = google_service_account.user-sql-service-account[each.key].name
  role                = "roles/iam.workloadIdentityUser"
  members             = ["serviceAccount:${data.google_project.project.name}.svc.id.goog[${each.key}/${each.key}-jade-gcloud-sqlproxy]"]
  depends_on          = [google_service_account.user-sql-service-account]
}
{{ end }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}
